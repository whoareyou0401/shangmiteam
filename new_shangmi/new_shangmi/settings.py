"""
Django settings for new_shangmi project.

Generated by 'django-admin startproject' using Django 1.11.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '$3e49j461!t6+v3njf)+oz+-)aoh5kp&oyr$wyu^uuh$(b2)w0'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'shangmi',
    "store",
    "rest_framework"
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'new_shangmi.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'new_shangmi.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': "shangmi",
        "HOST": "127.0.0.1",
        "USER": os.environ.get("DBUSER"),
        "PASSWORD": os.environ.get("DBPWD")
    }
}
# CACHES = {
#     "default": {
#         "BACKEND": "django_redis.cache.RedisCache",
#         "LOCATION": "redis://127.0.0.1:6379/1",
#         "OPTIONS": {
#             "CLIENT_CLASS": "django_redis.client.DefaultClient",
#         }
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# 注意：不要更改
REGION = "cn-hangzhou"
PRODUCT_NAME = "Dysmsapi"
DOMAIN = "dysmsapi.aliyuncs.com"
SMS_ACCESS_KEY_ID = os.environ.get("SMS_ACCESS_KEY_ID")
SMS_ACCESS_KEY_SECRET = os.environ.get("SMS_ACCESS_KEY_SECRET")
SMS_TEMPLATE_ID = os.environ.get("SMS_TEMPLATE_ID")
# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
EMAIL_USE_SSL = True

EMAIL_HOST = 'smtp.qq.com'  # 如果是 163 改成 smtp.163.com

EMAIL_PORT = 465


EMAIL_HOST_USER = "1038475854@qq.com" # 帐号

EMAIL_HOST_PASSWORD = "dhlgvfuezdarbdac"

DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
EMAIL_BACKEND ='django.core.mail.backends.smtp.EmailBackend'
SERVER_EMAIL=EMAIL_HOST_USER

SMALL_WEIXIN_TOKEN_VALID_TIME = 60 * 60 * 24 * 30


ADMINS = (
    ('liuda', 'liuda@1000phone.com'),

)


# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'formatters': {
#         'standard': {
#             'format': '%(asctime)s [%(threadName)s:%(thread)d] [%(name)s:%(lineno)d] [%(module)s:%(funcName)s] [%(levelname)s]- %(message)s'
#         },
#         'easy':{
#             'format': '%(asctime)s|%(funcName)s|%(message)s'
#         }
#     },
#     'filters': { #过滤条件
#         'require_debug_false': {
#             '()': 'django.utils.log.RequireDebugFalse',
#         },
#         'require_debug_true':{
#             '()': 'django.utils.log.RequireDebugTrue', #邀要求debug是True
#         }
#     },
#     'handlers': {
#         'mail_admins': {  #一旦线上代码报错 邮件提示
#             'level': 'ERROR',
#             'class': 'django.utils.log.AdminEmailHandler',
#             'filters': ['require_debug_false'],
#         },
#         'debug': {
#             'level': 'DEBUG',
#             'class': 'logging.handlers.RotatingFileHandler',
#             'filename': os.path.join(BASE_DIR, "log", 'debug.log'),  # 文件路径
#             'maxBytes': 1024 * 1024 * 5, #5兆的数据
#             'backupCount': 5, #允许有5这样的文件
#             'formatter': 'easy', #格式
#         },
#         'console': {
#             'level': 'DEBUG',
#             'class': 'logging.StreamHandler',
#             'formatter': 'standard',
#         },
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['debug'],
#             'level': 'DEBUG',
#             'propagate': False
#         },
#         'django.request': {
#             'handlers': ['debug', 'mail_admins'],
#             'level': 'ERROR',
#             'propagate': True, #是否继承父类的log信息
#         },
#         # 对于不在 ALLOWED_HOSTS 中的请求不发送报错邮件
#         'django.security.DisallowedHost': {
#             'handlers': ['debug'],
#             'propagate': False,
#         },
#     }
# }

SMALL_WEIXIN_OPENID_URL = "https://api.weixin.qq.com/sns/jscode2session"
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    },
    "user": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/10",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}
LOGIN_TIMEOUT = 60*60*24*15 #15天
MCHID = os.environ.get("MCHID")
PAY_KEY = os.environ.get("PAY_KEY")
PAY_APPID = "wx8b50ab8fa813a49e"

IMPORTTANT_URL="https://api.mch.weixin.qq.com/mmpaymkttransfers/promotion/transfers"
WEIXIN_PAY_CERT_PATH = os.path.join(BASE_DIR, "pay_cert", "1357996702_20181006_cert.pem")
WEIXIN_PAY_CERT_KEY_PATH = os.path.join(BASE_DIR, "pay_cert", "1357996702_20181006_key.pem")

# 模板消息服务通知
GET_MONEY_TEMPLTAE_URL = "https://api.weixin.qq.com/cgi-bin/message/wxopen/template/send"
GET_MONEY_TEMPLTAE_ID = os.environ.get("TEMPLATE_ID")

endpoint = 'https://shangmi.oss-cn-beijing.aliyuncs.com'
OSS_ACCESS_KEY_ID = os.environ.get("OSS_ACCESS_KEY_ID")# 'LTAIXPTosazV9jSq'
OSS_ACCESS_KEY_SECRET = os.environ.get("OSS_ACCESS_KEY_SECRET")#'7uXYe15rjLzEjStAwVraExvAWFkxIw'
bucket_name = 'shangmi'
bucket_name_host = "shangmi.oss-cn-shanghai.aliyuncs.com/apps/"
# https://shangmi.oss-cn-beijing.aliyuncs.com/apps/active1adv.png
ADMINS = (
    ("liuda", "1625211623@qq.com"),
)

import djcelery
djcelery.setup_loader()
BROKER_URL='redis://localhost:6379/1'
CELERY_CONCURRENCY=2 #（设置worker的并发数量）
CELERY_RESULT_BACKEND = 'redis://localhost:6379/2'
CELERY_TASK_SERIALIZER = 'json'              # 任务序列化和反序列化使用json
CELERY_RESULT_SERIALIZER = 'json'